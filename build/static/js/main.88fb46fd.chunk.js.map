{"version":3,"sources":["images/3.png","images/2.jpg","images/3.jpg","components/TopHeader.js","components/Home.js","components/Loader.js","components/Tracks.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TopHeader","queryString","parse","window","location","search","query","state","searchHandler","e","target","value","setState","type","id","for","class","className","placeholder","onChange","to","this","href","style","textDecoration","Component","Home","marginTop","width","height","src","Back","alt","Loader","base_url","Tracks","artist","tracks","playing","audio","playingPreviewUrl","loading","seractArtist","axios","get","then","res","data","artists","total","items","catch","error","Swal","fire","playAudio","previewUrl","Audio","pause","play","trackIcon","track","preview_url","prevProps","prevState","console","log","length","Fragment","images","url","def_img","borderRadius","fontSize","name","followers","genres","join","zIndex","map","i","album","key","onClick","App","path","component","exact","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.88fb46fd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/3.15f8604a.png\";","module.exports = __webpack_public_path__ + \"static/media/2.0d54e234.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.58b238ee.jpg\";","import React, { Component } from \"react\";\nimport \"../css/TopHeader.css\";\nimport { Link } from \"react-router-dom\";\nimport queryString from \"query-string\";\n\nconst { query } = queryString.parse(window.location.search);\n\nclass TopHeader extends Component {\n  state = {\n    query: \"\"\n  };\n  searchHandler = e => {\n    const query = e.target.value;\n    this.setState({\n      query\n    });\n  };\n  render() {\n    return (\n      <div>\n        <nav>\n          <input type=\"checkbox\" id=\"check\" />\n          <label for=\"check\" class=\"checkbtn\">\n            <i class=\"fas fa-bars\"></i>\n          </label>\n          <label class=\"logo\">Music Master</label>\n\n          <ul className=\"mr-auto\">\n            <li>\n              <form class=\"form-inline my-2\">\n                <input\n                  className=\"form-control mr-sm-2\"\n                  placeholder=\"Search Artist\"\n                  onChange={e => this.searchHandler(e)}\n                />\n                <Link to={`/tracks?query=${this.state.query}`}>\n                  <button className=\"btn btn-light my-2 my-sm-0\" type=\"submit\">\n                    Search\n                  </button>\n                </Link>\n              </form>\n            </li>\n            &nbsp;&nbsp;&nbsp;\n            <li>\n              <a class=\"\" href=\"/\" style={{ textDecoration: \"none\" }}>\n                Home\n              </a>\n            </li>\n            &nbsp;&nbsp;&nbsp;\n            <li>\n              <a href=\"http://khushwantkodecha.github.io/\" target=\"_blank\" style={{ textDecoration: \"none\" }}>\n                About Developer\n              </a>\n            </li>\n            &nbsp;&nbsp;\n          </ul>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default TopHeader;\n","import React, { Component } from \"react\";\nimport TopHeader from \"./TopHeader\";\nimport BottomHeader from \"./BottomHeader\";\nimport Back from \"../images/3.png\";\nimport \"../css/Home.css\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <TopHeader />\n        <div>\n          <img\n            className=\"\"\n            style={{ marginTop: \"1%\", width: \"100%\", height: \"30%\" }}\n            src={Back}\n            alt=\"back\"\n          />\n        </div>\n        {/* <BottomHeader /> */}\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport \"../css/Loader.css\";\n\nconst Loader = () => (\n  <div className=\"text-center spinner\">\n    <div class=\"spinner-grow text-muted\"></div>\n    <div class=\"spinner-grow text-primary\"></div>\n    <div class=\"spinner-grow text-success\"></div>\n    <div class=\"spinner-grow text-info\"></div>\n    <div class=\"spinner-grow text-warning\"></div>\n    <div class=\"spinner-grow text-danger\"></div>\n    <div class=\"spinner-grow text-secondary\"></div>\n    <div class=\"spinner-grow text-dark\"></div>\n    <div class=\"spinner-grow text-light\"></div>\n  </div>\n);\n\nexport default Loader;\n","import React, { Component } from \"react\";\nimport queryString from \"query-string\";\nimport TopHeader from \"./TopHeader\";\nimport BottomHeader from \"./BottomHeader\";\nimport Home from \"./Home\";\nimport axios from \"axios\";\nimport \"../css/Tracks.css\";\nimport def_img from \"../images/2.jpg\";\nimport Loader from \"./Loader\";\nimport Swal from \"sweetalert2\";\nimport Back from \"../images/3.jpg\";\n\nconst base_url = \"https://spotify-api-wrapper.appspot.com\";\n\nclass Tracks extends Component {\n  state = {\n    artist: [],\n    query: \"\",\n    tracks: [],\n    playing: false,\n    audio: null,\n    playingPreviewUrl: null,\n    loading: false,\n  };\n  componentDidMount() {\n    const { query } = queryString.parse(window.location.search);\n    this.setState(\n      {\n        query,\n      },\n      () => this.seractArtist()\n    );\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { query } = queryString.parse(window.location.search);\n    console.log(query);\n    console.log(prevState);\n    if (this.state.query !== query) {\n      this.setState(\n        {\n          query,\n        },\n        () => this.seractArtist()\n      );\n    }\n  }\n\n  seractArtist = () => {\n    this.setState({ loading: true });\n    axios\n      .get(`${base_url}/artist/${this.state.query}`)\n      .then((res) => {\n        if (res.data.artists.total > 0) {\n          const artist = res.data.artists.items;\n          this.setState({ artist: artist });\n          axios\n            .get(`${base_url}/artist/${artist[0].id}/top-tracks`)\n            .then((res) => {\n              this.setState({ tracks: res.data.tracks, loading: false });\n            })\n            .catch((error) => {\n              // alert(error);\n              Swal.fire(\"Oops...\", error, \"error\");\n              this.setState({ artist: [], loading: false });\n            });\n        } else {\n          Swal.fire(\"Worning\", \"Please Enter Correct Artist Name!\", \"error\");\n          this.setState({ artist: [], loading: false });\n        }\n      })\n      .catch((error) => {\n        Swal.fire(\"Oops...\", `${error}`, \"error\");\n        this.setState({ artist: [], loading: false });\n      });\n  };\n\n  playAudio = (previewUrl) => () => {\n    const audio = new Audio(previewUrl);\n    if (!this.state.playing) {\n      audio.play();\n      this.setState({ playing: true, audio, playingPreviewUrl: previewUrl });\n    } else {\n      this.state.audio.pause();\n      if (this.state.playingPreviewUrl === previewUrl) {\n        this.setState({ playing: false });\n      } else {\n        audio.play();\n        this.setState({ audio, playingPreviewUrl: previewUrl });\n      }\n    }\n  };\n\n  trackIcon = (track) => {\n    if (!track.preview_url) {\n      return (\n        <span>\n          <i class=\"fas fa-ban\"></i>{\" \"}\n        </span>\n      );\n    }\n    if (\n      this.state.playing &&\n      this.state.playingPreviewUrl === track.preview_url\n    ) {\n      return (\n        <span>\n          <i class=\"fas fa-pause-circle\"></i>\n        </span>\n      );\n    }\n    return (\n      <span>\n        <i class=\"fas fa-play-circle\"></i>\n      </span>\n    );\n  };\n\n  render() {\n    console.log(this.state);\n    return (\n      <div>\n        <TopHeader />\n        {this.state.query.length && this.state.loading ? (\n          <Loader />\n        ) : this.state.artist.length > 0 ? (\n          <React.Fragment>\n            <div className=\"main_heading\" style={{ marginTop: 100 }}>\n              <img\n                className=\"profile__image\"\n                src={\n                  this.state.artist[0].images.length\n                    ? this.state.artist[0].images[0].url\n                    : def_img\n                }\n                alt=\"artist-profile\"\n                style={{\n                  width: 200,\n                  height: 200,\n                  borderRadius: 20,\n                  width: 100,\n                  height: 100,\n                }}\n              />\n              <h3 style={{ fontSize: 20 }}>\n                <i>\n                  <b>{this.state.artist[0].name}</b>\n                </i>\n              </h3>\n              <p>\n                <i>Followers</i> : <b>{this.state.artist[0].followers.total}</b>\n              </p>\n              <p style={{ marginTop: -15 }}>\n                <i>{this.state.artist[0].genres.join(\", \")}</i>\n              </p>\n            </div>\n            <div className=\"main_heading\" style={{ zIndex: 0 }}>\n              {this.state.tracks.length &&\n                this.state.tracks.map((track, i) => {\n                  const { id, name, album, preview_url } = this.state.tracks[i];\n                  return (\n                    <div\n                      key={id}\n                      className=\"track\"\n                      style={{ borderRadius: 50 }}\n                      onClick={this.playAudio(preview_url)}\n                    >\n                      <img\n                        src={album.images[0].url}\n                        alt=\"track-image\"\n                        className=\"track-image\"\n                        style={{ borderRadius: 10 }}\n                        width=\"50\"\n                        height=\"50\"\n                      />\n                      <p className=\"track-text\"> {name} </p>\n                      <p className=\"track-icon\">{this.trackIcon(track)}</p>\n                    </div>\n                  );\n                })}\n            </div>\n          </React.Fragment>\n        ) : null}\n        <br />\n        <br />\n        {/* <BottomHeader /> */}\n      </div>\n    );\n  }\n}\n\nexport default Tracks;\n","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./components/Home\";\nimport Tracks from \"./components/Tracks\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Route path=\"/\" component={Home} exact/>\n      <Route path=\"/tracks\" component={Tracks} />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}